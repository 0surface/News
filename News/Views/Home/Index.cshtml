@model News.Models.WebsiteListVM
@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <h1>News Headlines</h1>
    <div class="col-md-12">
        <div class="col-md-12">
            <div>
                           
            </div>
            <h4>
                Click on the Website Logo 
            </h4>
            <div id="websites">
                <img id="spinner" src="~/images/loading.gif" style="display:none;" />
                @for (int i = 0; i < Model.Items.Count; i++)
                {
                    <img src="@Model.Items[i].LogoImageUrl.ToString()"
                         alt="@Model.Items[i].Name.ToString()"
                         class="img-fluid rounded float-left"
                         id="image_@i"
                         style="width:150px;height:50px"
                         onclick="getWebData('@Model.Items[i].Name.ToString()')" />
                }
            </div>
             <br/><br />
        </div>
        <hr />
        <div id="treeArea" class="treeArea col-md-12">            
        </div>
    </div>
</div>

<script>
    var _showLogs = false;    
   
    //Intialise the D3 tree maker
    var d3Maker = UtilHelper.treeMaker();
       
    //On page load
    $(function () {
        getWebData("BBC");             
        d3Maker.generateTreeDiagram();
    });        

    ///Parses data to json and updates the D3 state, hides spinner.
    function getWebData_successCallback(data) {
        UtilHelper.log(_showLogs, "success fetching data");
        let updatedTreeData = JSON.parse(data);

        UtilHelper.log(_showLogs, "updating d3 tree data");
        d3Maker.root = updatedTreeData[0];
        d3Maker.root.x0 = d3Maker.height / 2;
        d3Maker.root.y0 = 0;
        d3Maker.update(d3Maker.root)

        UtilHelper.log(_showLogs, "hiding buffering spinner");
        showSpinner(false);
    }

    ///Hides Spinner and shows error in the console.
    function getWebData_failCallback(err) {
        showSpinner(false);
        UtilHelper.log(_showLogs, `Error ajax getWebData : ${err}`);
    }

    /// Calls the Controller for headlines for the clicked image's website name
    /// Executes call back functions after the ajax call
    /// See (wwwroot/ts modules for more)
    function getWebData (websiteName) {
        if (websiteName === '') { websiteName = "BBC"; }        

        showSpinner(true);

        UtilHelper.AjaxPostwithCallback("Home/GetHeadlines",
            { name: websiteName },
            getWebData_successCallback,
            getWebData_failCallback )
    }
    
    ///Toggles the visibility of the spinner gif container
    showSpinner = (state) => { state ? $("#spinner").show() : $("#spinner").hide(); } 

</script>


